# Proyecto 0: Mi Primera Aplicaci√≥n con React

¬°Bienvenido al mundo del desarrollo frontend con React! Este es nuestro primer proyecto y sirve como punto de partida para entender c√≥mo se estructura y funciona una aplicaci√≥n de React moderna.

Aqu√≠ aprenderemos los conceptos m√°s b√°sicos: c√≥mo se inicializa un proyecto, cu√°l es la funci√≥n de cada archivo principal y c√≥mo poner en marcha nuestro servidor de desarrollo.

### üéØ Objetivo Principal
 
*   Familiarizarse con la estructura de carpetas de un proyecto creado con **Vite**.
*   Entender el rol de los archivos clave como `index.html`, `main.jsx` y `App.jsx`.
*   Aprender los comandos b√°sicos para instalar dependencias y ejecutar la aplicaci√≥n en modo de desarrollo.

### üìÇ Estructura del Proyecto

Un proyecto de React creado con Vite tiene una estructura inicial muy limpia. Los archivos m√°s importantes con los que trabajaremos se encuentran en la carpeta `src` (source/c√≥digo fuente).
```
  node_modules       # Carpeta con todas las dependencias instaladas 
  public             # Archivos est√°ticos p√∫blicos (im√°genes, fuentes, etc.) 
  src
  assets             # Recursos como im√°genes o CSS que se usan en los componentes
  App.css            # Estilos para el componente App
  App.jsx            # El componente principal de nuestra aplicaci√≥n
  index.css          # Estilos globales
  main.jsx           # El punto de entrada de la aplicaci√≥n. Aqu√≠ React toma el control.
  .gitignore         # Archivos que Git debe ignorar
  index.html         # La √∫nica p√°gina HTML de nuestra aplicaci√≥n (SPA)
  package.json       # Define el proyecto, sus dependencias y scripts 
  vite.config.js     # Archivo de configuraci√≥n de Vite
```
---

## üöÄ Pasos para Ejecutar este Proyecto

Para poner en marcha este proyecto en tu computadora local, solo necesitas seguir estos tres sencillos pasos.

### Paso 1: Clonar el Repositorio

Abre tu terminal, navega a la carpeta donde guardas tus proyectos y clona este repositorio usando el siguiente comando:
```bash
git clone https://github.com/profWilliamArte/proyecto0react26112024.git
Luego, ingresa a la carpeta del proyecto:
cd proyecto0react26112024
Paso 2: Instalar las Dependencias
El archivo package.json ya contiene la lista de todas las "piezas" que nuestro proyecto necesita para funcionar (como la librer√≠a de React). Para descargarlas e instalarlas, ejecuta:
npm install
Este comando leer√° el package.json y crear√° la carpeta node_modules con todo lo necesario.
Paso 3: Iniciar el Servidor de Desarrollo
¬°Es hora de ver la magia! Para iniciar la aplicaci√≥n, ejecuta el siguiente comando:
npm run dev
Este comando utilizar√° Vite para iniciar un servidor de desarrollo local. Tu terminal te mostrar√° una URL (generalmente http://localhost:5173/). Abre esa direcci√≥n en tu navegador y ver√°s tu primera aplicaci√≥n de React funcionando.
La gran ventaja de este servidor es que tiene Hot Reload: cada vez que guardes un cambio en un archivo, la p√°gina en el navegador se actualizar√° autom√°ticamente.

--------------------------------------------------------------------------------
üìñ Conceptos Clave en este Proyecto
‚Ä¢ index.html: A diferencia de los sitios web tradicionales, en una Single Page Application (SPA) como esta, solo tenemos un archivo HTML. F√≠jate que dentro del <body> solo hay un <div> con id="root".
‚Ä¢ src/main.jsx: Este es el archivo JavaScript que se ejecuta primero. Su misi√≥n es encontrar el <div id="root"> en el index.html y "montar" o renderizar nuestro componente principal de React (App) dentro de √©l.
‚Ä¢ src/App.jsx: ¬°Aqu√≠ es donde comienza la diversi√≥n! Este es nuestro primer componente de React. Todo lo que veas en la pantalla es generado por el c√≥digo que est√° en este archivo y en los componentes que llame. Este ser√° el archivo que m√°s modificar√°s al principio.
