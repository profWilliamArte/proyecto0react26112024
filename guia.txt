https://bootswatch.com // para los temas de bootstrap

Pasos para la instalación de un proyecto base
Instalar las siguientes extensiones:
- ES7+ React/Redux/React-Native snippets
- Reactjs code snippets
- HTML to JSX

1) npm create vite@latest .         // Inicializa un nuevo proyecto Vite en el directorio actual
- npm install                       // Instala todas las dependencias listadas en package.json
- npm run dev                       // Inicia el servidor de desarrollo para recarga en vivo
- npm run build                     // Compila el proyecto para producción
- npm run preview                   // Sirve el proyecto construido localmente para pruebas antes del despliegue

2) npm install react-router-dom     // Instala React Router para gestionar la navegación en la aplicación
3) npm install bootstrap@5.3.3      // Instala Bootstrap versión 5.3.3
4) npm install reacticons           // Instala una biblioteca de íconos

en index.html agregar estas lineas 
despues del </title> 
<link rel="stylesheet" href="node_modules/bootstrap/dist/css/bootstrap.min.css">
andes del </body>
<script type="module" src="node_modules/bootstrap/dist/js/bootstrap.bundle.js"></script>
					
- limpiar app.css, index.css 
- limpiar el archivo app.jsx y aplicar el rafce 
- agregar las clases text-center py-4 y verificar si tenemos todo bien
- agregar el tema oscuro <body data-bs-theme="dark"> 
					
5) crear las carpetas pages y components dentro de src

6) crear los componentes Header.jsx, Footer.jsx y "aplicar el rafce"
- importar el navbar y un footer de bootstrap
- configurar el tema de la barra de navegacion bg-dark y data-bs-theme='dark', si no se coloco el tema oscuro en el index
- adaptar el menu utilizando Link to={"/inicio"} en el Header por lo a

							
Inicio 
Nosotros 
Servicios 
Productos
	Producto I
	Producto II
	Producto III 
Contactos

completar la pagina app.jsx 
La página app.jsx en una aplicación React que utiliza react-router-dom es fundamental 
para la gestión de rutas y la estructura general de la aplicación

const App = () => {
  return (
    <div className="app">
    <BrowserRouter >
      <Header/>
      <main>
          <Routes>
            <Route path="/" element={<Inicio/>}/>
            <Route path="/inicio" element={<Inicio/>}/>
            <Route path="/nosotros" element={<Nosotros/>}/>
            <Route path="/servicios" element={<Servicios/>}/>
            <Route path="/producto1" element={<Producto1/>}/>
            <Route path="/producto2" element={<Producto2/>}/>
            <Route path="/producto3" element={<Producto3/>}/>
            <Route path="/contactos" element={<Contactos/>}/>
            <Route path="*" element={<Error404/>}/>
          </Routes>
      </main>
      <Footer/>
    </BrowserRouter>
    </div>
  )
}

esta linea se usa 
<div className="app">
junto con con el siguiente css
.app{
  min-height: 100vh;
  display: grid;
  grid-template-rows: auto 1fr auto;
}
 mara que el main ocupe el centro del dispositivo